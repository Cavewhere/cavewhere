name: Build on Windows

on:
  push:
    branches:
      - WIP-cmake
  pull_request:
    branches:
      - '*'

jobs:
  build-cache:
    runs-on: windows-2019
    env:
      CONAN_REVISIONS_ENABLED: 1

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Conan
      run: pip install conan==1.60.2

    - name: Home directory
      run: echo "Home: ${{ runner.env.USERPROFILE }}"

    - name: Cache Conan packages
      uses: actions/cache@v3
      with:
        path: ${{ runner.env.USERPROFILE }}/.conan
        key: ${{ runner.os }}-conan-${{ hashFiles('**/conanfile.py') }}

    - name: Conan Profile
      run: conan profile new default --detect

    - name: Add Conan Remotes
      run: |
        conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan


#  build:
#    runs-on: windows-2019
#    env:
#      CONAN_REVISIONS_ENABLED: 1
#
#    steps:
#    #- name: install aptinstall
#    #  run: pip install aqtinstall
#
#    #- name: What versions of qt are avaliable
#    #  run: aqt list-qt windows desktop
#
#    - name: Checkout code
#      uses: actions/checkout@v4
#      with:
#        fetch-depth: 0
#        submodules: 'recursive'
#
#    #- name: Fetch tags for survex
#    #  run: |
#    #    cd survex
#    #    git fetch --tags
#    #    git fetch --all
#
#    - name: Setup MSBuild
#      uses: microsoft/setup-msbuild@v1.1
#      with:
#        msbuild-architecture: x64
#
#    - name: Install Conan
#      run: pip install conan==1.60.2
#
#    - name: Set USERPROFILE (aka home dir) env
#      run: echo "USERPROFILE=${{ runner.env.USERPROFILE }}" >> $GITHUB_ENV
#
#    - name: Cache Conan packages
#      uses: actions/cache@v3
#      with:
#        path: ${{ env.USERPROFILE }}/.conan
#        key: ${{ runner.os }}-conan-${{ hashFiles('**/conanfile.py') }}
#
#    - name: Conan Profile
#      run: conan profile new default --detect
#
#    - name: Add Conan Remotes
#      run: |
#        conan remote add bincrafters https://bincrafters.jfrog.io/artifactory/api/conan/public-conan
#
#    #- name: Install Qt
#    #  uses: jurplel/install-qt-action@v3
#    #  with:
#    #    version: '5.15.2'
#    #    host: 'windows'
#    #    target: 'desktop'
#    #    arch: 'win64_msvc2019_64'
#    #    dir: '${{ github.workspace }}/'
#    #    install-deps: 'true'
#    #    #modules: 'qtpdf'
#    #    #archives: 'qtbase qtsvg'
#    #    cache: 'true'
#    #    cache-key-prefix: 'install-qt-action'
#
#    - name: Install perl Locale::PO
#      run: cpan install Locale::PO
#
#    - name: Create Build Directory
#      run: |
#        mkdir ..\build
#        mkdir ..\build\conan-dependencies
#
#    - name: Conan Install Dependencies
#      run: conan install . --build missing --install-folder ../build/conan-dependencies -o CaveWhere/*:system_qt=False
#
#    - name: Run Conan Environment Setup
#      run: call ..\build\conan-dependencies\conanrun.bat
#      shell: cmd
#
#    - name: ls build
#      run: |
#        dir ..\build
#        dir ..\build\conan-dependencies
#        dir .
#
#    - name: Install ninja-build tool
#      uses: seanmiddleditch/gha-setup-ninja@v3
#
#    - name: CMake Configure
#      run: cmake -G Ninja -S "../cavewhere" -DCMAKE_BUILD_TYPE=Release -DWITH_PDF=OFF -DCMAKE_MODULE_PATH="D:/a/cavewhere/build/conan-dependencies" -B "../build"
#
#    - name: CMake Build
#      run: cmake --build "../build" --target all
#
#    - name: CMake Build Windows Installer
#      run: cmake --build "../build" --target windowsInstaller
#
#    - name: Upload Artifact
#      uses: actions/upload-artifact@v3
#      with:
#        name: windows-artifact
#        path: build/Cavewhere*64bit.exe
