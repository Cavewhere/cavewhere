#define MyAppName "@CAVEWHERE_NAME@"
#define MyAppVersion "@CAVEWHERE_VERSION@"
#define MyAppPublisher "Vadose Solutions"
#define MyAppURL "http://www.cavewhere.com"
#define MyAppExeName "CaveWhere.exe"
#define MyArchitecturesAllowed "@ARCH_ALLOWED@"
#define MyArchitecturesInstallIn64BitMode "@INSTALL_64BIT@"
#define Arch "@ARCH@"
#define MyRedistributableExe "@REDISTRIBUTABLE_EXE@"
#define MyRedistributableVersion "@REDISTRIBUTABLE_VERSION@"
#define releaseDirectory "@DEPLOY_DIR@"
#define MyAppId "{{9A964957-5F6C-48C3-9780-7D11A8B858DD}"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={#MyAppId}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DefaultGroupName={#MyAppName}
ArchitecturesAllowed={#MyArchitecturesAllowed}
ArchitecturesInstallIn64BitMode={#MyArchitecturesInstallIn64BitMode}
OutputDir=.
OutputBaseFilename="Cavewhere {#MyAppVersion} {#Arch}"
Compression=lzma
SolidCompression=yes
ChangesAssociations=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "{#releaseDirectory}\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#releaseDirectory}\{#MyRedistributableExe}"; DestDir: {tmp}; Flags: deleteafterinstall
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Registry]
Root: HKLM; Subkey: "Software\Classes\.cw"; ValueType: string; ValueName: ""; ValueData: "CaveWhereProjectFile"; Flags: uninsdeletevalue
Root: HKLM; Subkey: "Software\Classes\CaveWhereProjectFile"; ValueType: string; ValueName: ""; ValueData: "CaveWhere File"; Flags: uninsdeletekey
Root: HKLM; Subkey: "Software\Classes\CaveWhereProjectFile\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\CaveWhere.EXE,0"
Root: HKLM; Subkey: "Software\Classes\CaveWhereProjectFile\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\CaveWhere.EXE"" ""%1"""

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

; add the Parameters, WorkingDir and StatusMsg as you wish, just keep here
; the conditional installation Check
; Comment out for microsoft store, should be an option
; Filename: "{tmp}\{#MyRedistributableExe}"; Parameters: "/install /quiet /norestart"; Check: not IsVCRedistInstalled

[Code]
const
  MyRedistributableVersion = '{#MyRedistributableVersion}';
  MyAppId = '{#MyAppId}';

function IsVCRedistInstalled(): Boolean;
var
  Version: string;
begin
  if RegQueryStringValue(HKLM, 'SOFTWARE\Microsoft\VisualStudio\14.0\VC\Runtimes\x64', 'Version', Version) then
  begin
    if CompareStr(Version, MyRedistributableVersion) >= 0 then
      Result := True
    else
      Result := False;
  end
  else
    Result := False;
end;

[Code]
function InitializeSetup(): Boolean;
var
  ResultCode: Integer;
  UninstallString: string;
begin
  Result := True;
  if RegQueryStringValue(HKLM, 'Software\Microsoft\Windows\CurrentVersion\Uninstall\' + MyAppId, 'UninstallString', UninstallString) then
  begin
    // Append silent uninstall switch if needed
    UninstallString := UninstallString + ' /SILENT';
    Exec(ExpandConstant(UninstallString), '', '', SW_HIDE, ewWaitUntilTerminated, ResultCode);
  end;
end;


