/**************************************************************************
**
**    Copyright (C) 2015 by Philip Schuchardt
**    www.cavewhere.com
**
**************************************************************************/

//Catch includes
#include "catch.hpp"

//Our includes
#include "cwError.h"
#include "cwErrorModel.h"
#include "cwCave.h"
#include "cwTrip.h"
#include "cwSurveyChunk.h"

/**
  This testcase tests the error handling inside of a cwSurveyChunk
  */
TEST_CASE("Checks errors that should be generated by a cwSurveyChunk")
{
    cwCave* cave = new cwCave();
    cwTrip* trip = new cwTrip();

    cave->addTrip(trip);

    cwSurveyChunk* chunk = new cwSurveyChunk();
    trip->addChunk(chunk);

    chunk->appendNewShot();

//    QVariantList errors = cave->errorModel()->errors(chunk);

//    CHECK(chunk->stationCount() == 2);
//    CHECK(chunk->shotCount() == 1);
//    CHECK(errors.count() == 32);

//    //Check all the stations
//    for(int i = 0; i < chunk->stationCount(); i++) {
//        for(int r = (int)cwSurveyChunk::StationNameRole; r <= cwSurveyChunk::StationDownRole; r++) {
//            QVariantList errors = cave->errorModel()->errors(chunk, i, r);
//            CHECK(errors.count() == 2);
//        }
//    }

//    cwSurveyChunk* chunk2 = new cwSurveyChunk();
//    chunk2->appendNewShot();

//    trip->addChunk(chunk2);

//    CHECK(cave->errorModel()->errors(trip).count() == 64);
//    CHECK(cave->errorModel()->errors(cave).count() == 64);


}

